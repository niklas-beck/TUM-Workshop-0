name: Manual Terraform Deploy on Azure

on:
  workflow_dispatch:
 #push:
 #  branches:
 #   - main

permissions:
      id-token: write
      contents: read

#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './src/'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      #this is needed since we are running terraform with read-only permissions
      ARM_SKIP_PROVIDER_REGISTRATION: true
    #outputs:
    #  tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}
  
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
    
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform/
    
    - name: Terraform Validate
      run: terraform validate
      working-directory: ./terraform/

    - name: Terraform Plan
      id: plan
      run: terraform plan
      working-directory: ./terraform/

    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve
      working-directory: ./terraform/


    # login to Azure to deploy function app
    - name: Az CLI login
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

    # get publish profile
    - name: Get Publish Profile
      run: >
        echo "PUBLISH_PROFILE=$(az webapp deployment list-publishing-profiles 
        -g ${{ steps.apply.outputs.resource_group_name }} 
        -n ${{ steps.apply.outputs.func_app_name }} 
        --xml)" >> $GITHUB_OUTPUT
      id: getPublishProfile

    # publish code to function App
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      with:
        package: "./scr/"
        app-name: ${{ steps.apply.outputs.func_app_name }}
        publish-profile: ${{ steps.getPublishProfile.outputs.PUBLISH_PROFILE }}
        scm-do-build-during-deployment: true
        enable-oryx-build: true
    
    